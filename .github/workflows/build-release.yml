# Gradle
name: Build & Release

on:
  push:
    paths:
      - '.github/workflows/build-release.yml'
      - 'eco-core/**/*'
      - 'gradle/**/*'
      - 'build.gradle.kts'
      - 'gradle.properties'
      - 'gradlew'
      - 'gradlew.bat'
      - 'settings.gradle.kts'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      - name: Set outputs
        id: vars
        #run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup build cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Gradle Permission
        run: chmod +x ./gradlew
      
      - name: Build with Gradle
        run: ./gradlew build --full-stacktrace
      
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: EcoArmor-${{ steps.vars.outputs.sha_short }}
          path: build/libs
      
      #- name: Download git-chglog CLI
        #run: |
          # Download the git-chglog executable from the provided URL
          #wget https://github.com/MediumCraft/Files/raw/main/git-chglog/bin/git-chglog
          #chmod +x git-chglog
          #./git-chglog --version

      #- name: Generate Changelog
        #run: |
          # Generate the changelog using git-chglog
          #./git-chglog --output CHANGELOG.md
      
      - name: Release Files
        uses: softprops/action-gh-release@v1
        with: 
          token: ${{ secrets.RELEASE_KEY }}
          files: |
            build/libs/*.jar
          tag_name: commit-${{ steps.vars.outputs.sha_short }}
          name: EcoArmor ${{ steps.vars.outputs.sha_short }}
          body: |
            Commit ${{ steps.vars.outputs.sha_short }}
            EcoArmor
          generate_release_notes: true
        env:
          GITHUB_REPOSITORY: MediumCraft/EcoArmor
